<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry type="method" name="QUnit.log">
	<title>QUnit.log()</title>
	<signature>
		<argument name="callback">
			<desc>Callback to execute. Provides a single argument with the following properties:</desc>
			<type name="Function">
				<argument name="details" type="Object"/>
			</type>
			<property name="result" type="Boolean">
				<desc>The boolean result of an assertion, <code>true</code> means passed, <code>false</code> means failed.</desc>
			</property>
			<property name="actual" type="Object">
				<desc>One side of a comparision assertion. Can be undefined when <code>ok()</code> is used.</desc>
			</property>
			<property name="expected" type="Object">
				<desc>One side of a comparision assertion. Can be undefined when <code>ok()</code> is used.</desc>
			</property>
			<property name="message" type="String">
				<desc>A string description provided by the assertion.</desc>
			</property>
			<property name="source" type="String">
				<desc>The associated stacktrace, either from an exception or pointing to the source of the assertion. Depends on browser support for providing stacktraces, so can be undefined.</desc>
			</property>
			<property name="module" type="String">
				<desc>The test module name of the assertion. If the assertion is not connected to any module, the property's value will be <code>undefined</code>.</desc>
			</property>
			<property name="name" type="String">
				<desc>The test block name of the assertion.</desc>
			</property>
		</argument>
	</signature>
	<desc>Register a callback to fire whenever an assertion completes.</desc>
	<longdesc>
		This is one of several callbacks QUnit provides. Its intended for integration scenarios like PhantomJS or Jenkins.
		<p>The properties of the details argument are listed below as options.</p>
	</longdesc>
	<example>
		<desc>Register a callback that logs the assertion result and its message</desc>
		<code><![CDATA[
QUnit.log(function( details ) {
	console.log( "Log: ", details.result, details.message );
});
]]></code>
	</example>
	<example>
		<desc>Logs the module and test block whenever an assertion fails.</desc>
		<code><![CDATA[
QUnit.log(function( details ) {
	if ( details.result ) {
		return;
	}
	var loc = details.module + ": " + details.name + ": ",
		output = "FAILED: " + loc + ( details.message ? details.message + ", " : "" );

	if ( details.actual ) {
		output += "expected: " + details.expected + ", actual: " + details.actual;
	}
	if ( details.source ) {
		output += ", " + details.source;
	}
	console.log( output );
});
]]></code>
	</example>
	<category slug="callbacks"/>
</entry>
